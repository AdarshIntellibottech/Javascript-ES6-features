function hello () {
  var a =86;
  console.log(a)
  
}
hello();

--------------------------------------------------------------------------
let a = 10;
function f() {
  if(true){
    var b=25;
    console.log(`inside if scope ${b}`)

  }
  console.log(`outside the scope ${b}`)

   
}
f()

// It prints 10
console.log(a)
//best example for var and let keyword
------------------------------------------------------------------------------


4145 : 4+1+4+5 = 14: 1+4 =5//

var num = 153089
var sum = 0;

add(num)

function add(num){
  let newarr =num.toString().split('')
  console.log(newarr)
  if(newarr.length != 1)
  {
    newarr.map((data)=>{
      sum += parseInt(data);
      
    })
    console.log(sum)
   
    if(sum >= 9){
      newarr =sum.toString().split('');
      sum=0;
      newarr.map((data)=>{
        sum += parseInt(data)
      })
      if(sum>=9){
        add(sum)
      }
      else{
        console.log(`The final result is ${sum}`)
      }
    }
    else{
      console.log(`The final result is ${sum}`)
    }
  
  }
  else
  {
      console.log("The answer is " + newarr)
  }
}


---------------------------------------------------------------------------
Hoisting in Javascript

Hoisting is a phenomenon in which one can access the function and variables
even before you have initialized it or u have put some value in it without any error

example:

read()
console.log(hooist)

function read(){
  console.log("Hello hoisting")
}
var hooist =17;

when a arrow function is used insted of normal function key word
javascript will consider it as a normal variable.

-------------------------------------------------------------------------------
Can a const object be updated (properties)

const vandobj = {
  name: "Adarsh",
  usn: "4jn17cs120",
  degree: "CS"
}

vandobj.name="Santosh"

console.log(vandobj)

// output {name: "Santosh", usn: "4jn17cs120", degree: "CS"}
-----------------------------------------------------------------------------
//use of spread operator

let student = {
  name: "Adarsh Naik",
  age: 19,
  address : "Shimoga"
}

let student1 = {...student, age:23, name:"Bharath"}

console.log(student1)
------------------------------------------------------------------------------
// rest operator use in objects
let employee = {
  ename: "atal",
  tech: "react",
  state: "Bihar"
}
const {tech, ...baki}= employee;
console.log(tech)
------------------------------------------------------------------------------
-----------------------------------------------------------------------------
Event loop in Javascript

Javascript was bascally build for Web browsers like chrome firefox etc
chrome uses v8 which is single threaded as it has one call stack
it executes one work at a time

call stack works like a normal stack last in first out

eg: 
console.log("hello")
let a=0;
let b=0;
function multiply( a*b)
{
  let res = a*b;
  console.log(res)
}
function start(){
  multiply(1*2)
}
start()

variable declared while writing a program in stored somewhere in memory and that is called as heap


